{"version":3,"file":"js/main-75829252eba9d6b7c144.js","mappings":"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","sources":["webpack://weather/webpack/bootstrap","webpack://weather/webpack/runtime/define property getters","webpack://weather/webpack/runtime/hasOwnProperty shorthand","webpack://weather/./public/scripts/router.ts","webpack://weather/./public/tpl/home.ts","webpack://weather/./public/tpl/town.ts","webpack://weather/./public/tpl/about.ts","webpack://weather/./public/scripts/aside.ts","webpack://weather/./public/scripts/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","import { home } from \"../tpl/home\";\nimport { town } from \"../tpl/town\";\nimport { about } from \"../tpl/about\";\n\nimport { handlerForm, getWeatherCity, appendWeather } from \"./index\";\n\nexport function initRouter(): void {\n  /**/\n  // eslint-disable-next-line no-restricted-globals\n  render(location);\n  // @ts-ignore\n  const navigation = document.querySelectorAll(\"nav a\");\n  navigation.forEach((el: Element): void => {\n    el.addEventListener(\"click\", (event) => {\n      event.preventDefault();\n\n      // @ts-ignore\n      const url: string = event.target.href;\n\n      // eslint-disable-next-line no-restricted-globals\n      history.pushState({}, \"\", url);\n\n      // @ts-ignore\n      // eslint-disable-next-line no-restricted-globals\n      render(location);\n    });\n  });\n\n  const asideLinks = document.querySelectorAll(\"aside a\");\n  asideLinks.forEach((el: Element): void => {\n    el.addEventListener(\"click\", (event) => {\n      event.preventDefault();\n\n      // @ts-ignore\n      const url: string = event.target.href;\n\n      // eslint-disable-next-line no-restricted-globals\n      history.pushState({}, \"\", url);\n\n      // @ts-ignore\n      // eslint-disable-next-line no-restricted-globals\n      render(location);\n    });\n  });\n}\n\nexport async function render(url: Object) {\n  const container = document.querySelector(\".container\") as Element;\n  container.innerHTML = \"\";\n\n  // @ts-ignore\n  switch (url.pathname) {\n    case \"/\":\n      container.innerHTML = home();\n      await handlerForm();\n      break;\n    case \"/town\":\n      // eslint-disable-next-line no-case-declarations\n      const res: any = town();\n      // eslint-disable-next-line prefer-destructuring\n      if (typeof res === \"string\") {\n        container.innerHTML = res;\n        await handlerForm();\n      } else {\n        // eslint-disable-next-line prefer-destructuring\n        container.innerHTML = res[1];\n        const answer = await getWeatherCity(res[0]);\n        appendWeather(answer);\n      }\n      break;\n    case \"/about\":\n      container.innerHTML = about();\n      break;\n    default:\n      container.innerHTML = home();\n      break;\n  }\n}\n","export function home(): string {\n  return `\n  <form id=\"enterCity\">\n            <div class=\"block\">\n              <label for=\"city\">Введите город</label>\n                <input type=\"text\" id=\"city\" />\n            </div>\n\n            <div class=\"block\">\n              <button type=\"submit\" id=\"enterCitySubmit\">Отправить</button>\n            </div>\n         </form>\n\n         <div class=\"result\"></div>\n\n         <div id=\"map\"></div>\n  `;\n}\n","export function town(): string | Array<any> {\n  /**/\n  // eslint-disable-next-line no-restricted-globals\n  const url = location.search;\n\n  if (url !== \"\") {\n    const reg = /\\w+/gi;\n    const townName = reg.exec(url);\n    // @ts-ignore\n    // eslint-disable-next-line max-len\n    return [\n      townName[0],\n      `<div class=\"townName\">${townName}</div><div class=\"result\"></div>`,\n    ];\n  }\n  return `\n    <form id=\"enterCity\">\n      <div class=\"block\">\n        <label for=\"city\">Введите город</label>\n          <input type=\"text\" id=\"city\" />\n      </div>\n\n      <div class=\"block\">\n        <button type=\"submit\" id=\"enterCitySubmit\">Отправить</button>\n      </div>\n    </form>\n    \n    <div class=\"result\"></div>\n  `;\n}\n","export function about(): string {\n  return \"about page\";\n}\n","import { initRouter } from \"./router\";\n\nexport function getLocalStorage() {\n  const towns = JSON.parse(<string>localStorage.getItem(\"town\"));\n\n  if (towns !== null) {\n    appendAside(towns);\n    // @ts-ignore\n    initRouter();\n  }\n}\n\nexport function setLocalStorage(value: string, url: string) {\n  const getStorage: string | null = localStorage.getItem(\"town\");\n  let towns: any = [];\n  const city: string = value[0].toUpperCase() + value.slice(1);\n\n  if (getStorage === null) {\n    towns.push([city, url.toLocaleLowerCase()]);\n  } else {\n    towns = JSON.parse(getStorage);\n    const isTown = towns.find((item: string[]) => item[0] === city);\n\n    if (isTown === undefined) {\n      towns.push([city, url.toLocaleLowerCase()]);\n    }\n  }\n\n  if (towns.length > 10) {\n    towns.shift();\n  }\n\n  localStorage.setItem(\"town\", JSON.stringify(towns));\n  getLocalStorage();\n}\n\nexport function appendAside(array: []) {\n  const block: HTMLElement = document.querySelector(\"aside\") as HTMLElement;\n  block.innerHTML = \"\";\n\n  const ul: HTMLUListElement = document.createElement(\"ul\");\n\n  array.forEach((el) => {\n    const li: HTMLLIElement = document.createElement(\"li\");\n    const url: HTMLAnchorElement = document.createElement(\"a\");\n\n    if (process.env.NODE_ENV === \"production\") {\n      url.setAttribute(\"href\", `/weather/town?${el[1]}`);\n    } else {\n      url.setAttribute(\"href\", `/town?${el[1]}`);\n    }\n\n    // eslint-disable-next-line prefer-destructuring\n    url.innerHTML = el[0];\n    // @ts-ignore\n    li.append(url);\n\n    ul.append(li);\n  });\n\n  block.append(ul);\n}\n","import \"../styles/styles.scss\";\n// @ts-ignore\nimport { setLocalStorage, getLocalStorage } from \"./aside\";\n\nif (process.env.NODE_ENV === \"production\") {\n  const navigation: Element | null = document.querySelector(\".head-row\");\n  // @ts-ignore\n  navigation.querySelectorAll(\"a\").forEach((el) => {\n    const currentHref: string | null = el.getAttribute(\"href\");\n    el.setAttribute(\"href\", `/weather${currentHref}`);\n  });\n\n  const asideLinks: Element | null = document.querySelector(\"aside\");\n  // @ts-ignore\n  asideLinks.querySelectorAll(\"a\").forEach((el) => {\n    const currentHref: string | null = el.getAttribute(\"href\");\n    el.setAttribute(\"href\", `/weather${currentHref}`);\n  });\n}\n\ngetLocalStorage();\n\nexport async function getWeatherCity(city: string) {\n  const apiKey = \"fcc07198ebd405c615789afc7486fd29\";\n  try {\n    const url = \"https://api.openweathermap.org/data/2.5/weather?\";\n    const cityName: string = `q=${city}`;\n    const units = \"&units=metric\";\n    const key = `&appid=${apiKey}`;\n    const fullUrl = `${url}${cityName}${units}${key}`;\n    const response = await fetch(fullUrl);\n    const data = await response.json();\n    return data;\n    // Обработка полученных данных\n  } catch (error) {\n    console.error(\"Error:\", error);\n  }\n}\n\nexport async function handlerForm() {\n  const form: Element = document.querySelector(\"#enterCity\") as Element;\n\n  if (form !== null) {\n    form.addEventListener(\"submit\", async (event) => {\n      event.preventDefault();\n      const getInput = form.querySelector(\"#city\") as HTMLInputElement;\n      const cityValue: string = getInput.value;\n\n      const answer = await getWeatherCity(cityValue);\n\n      setLocalStorage(cityValue, answer.name);\n\n      appendWeather(answer);\n    });\n  }\n  try {\n    const coords: any = await getCoords();\n    // eslint-disable-next-line max-len\n    const answer: object = await getWeatherCoords(\n      coords.latitude,\n      coords.longitude,\n    );\n    appendWeather(answer);\n  } catch (error: any) {\n    console.error(\"Ошибка получения геопозиции:\", error.message);\n  }\n}\n\nexport function appendWeather(weather: any) {\n  const block = document.querySelector(\".result\");\n  const map = document.getElementById(\"map\");\n\n  if (block !== null) {\n    const icon = document.createElement(\"img\");\n    const iconUrl = \"https://openweathermap.org/img/wn/\";\n    const iconName = weather.weather[0].icon;\n    icon.setAttribute(\"src\", `${iconUrl}${iconName}.png`);\n\n    const row = document.createElement(\"p\");\n    row.classList.add(\"text\");\n    row.innerHTML = `Погода в \n    ${weather.name} сейчас \n    ${Math.round(weather.main.temp)} &deg;C`;\n\n    const string = document.createElement(\"div\");\n    string.classList.add(\"flex\");\n\n    string.insertAdjacentElement(\"beforeend\", icon);\n    string.insertAdjacentElement(\"beforeend\", row);\n\n    block.innerHTML = \"\";\n    block.insertAdjacentElement(\"afterbegin\", string);\n  }\n\n  if (map !== null) {\n    map.innerHTML = \"\";\n    renderMap(weather.coord.lat, weather.coord.lon);\n  }\n}\n\nexport async function getWeatherCoords(lat: string, lon: string) {\n  const api = \"fcc07198ebd405c615789afc7486fd29\";\n  try {\n    const url = \"https://api.openweathermap.org/data/2.5/weather?\";\n    const latitude = `lat=${lat}`;\n    const longitude = `&lon=${lon}`;\n    const units = \"&units=metric\";\n    const key = `&appid=${api}`;\n    const fullUrl = `${url}${latitude}${longitude}${units}${key}`;\n    const response = await fetch(fullUrl);\n    const data = await response.json();\n    return data;\n    // Обработка полученных данных\n  } catch (error) {\n    console.error(\"Error:\", error);\n  }\n}\n\nexport function getCoords() {\n  // eslint-disable-next-line no-shadow\n  return new Promise((resolve, reject) => {\n    navigator.geolocation.getCurrentPosition(\n      (position) => {\n        const coords = {\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude,\n        };\n        resolve(coords);\n      },\n      (error) => {\n        reject(error);\n      },\n    );\n  });\n}\n\nexport function renderMap(lat: string, lon: string) {\n  /* @ts-ignore */\n  // eslint-disable-next-line no-undef\n  ymaps.ready(init);\n  function init() {\n    // Создание карты.\n    /* @ts-ignore */\n    // eslint-disable-next-line no-undef,no-new\n    new ymaps.Map(\"map\", {\n      // Координаты центра карты.\n      // Порядок по умолчанию: «широта, долгота».\n      // Чтобы не определять координаты центра карты вручную,\n      // воспользуйтесь инструментом Определение координат.\n      center: [lat, lon],\n      // Уровень масштабирования. Допустимые значения:\n      // от 0 (весь мир) до 19.\n      zoom: 10,\n    });\n  }\n}\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","async","render","url","container","document","querySelector","innerHTML","pathname","handlerForm","res","location","search","townName","exec","town","appendWeather","getWeatherCity","getLocalStorage","towns","JSON","parse","localStorage","getItem","array","block","ul","createElement","forEach","el","li","setAttribute","append","appendAside","querySelectorAll","addEventListener","event","preventDefault","target","href","history","pushState","city","fullUrl","response","fetch","json","error","console","form","cityValue","value","answer","getStorage","toUpperCase","slice","push","toLocaleLowerCase","undefined","find","item","length","shift","setItem","stringify","setLocalStorage","name","coords","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","position","latitude","longitude","lat","lon","getWeatherCoords","message","weather","map","getElementById","icon","iconUrl","iconName","row","classList","add","Math","round","main","temp","string","insertAdjacentElement","coord","ymaps","ready","Map","center","zoom","currentHref","getAttribute"],"sourceRoot":""}